buildscript {
    ext.versions = [
            "kotlin"    : "1.8.10",
            "coroutines": "1.6.4",
            "compileSdk": 33,
            "minSdk"    : 28,
            "targetSdk" : 33,
            "ndk"       : "25.2.9519653",
            "lifecycle" : "2.6.0-alpha03",
            "paging"    : "3.2.0-alpha04",
            "room"      : "2.5.0",
            "hilt"      : "2.45",
            "junit"     : "1.1.5",
            "truth"     : "1.5.0"
    ]
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.4.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$versions.kotlin"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$versions.hilt"
    }
}

plugins {
    id "com.diffplug.spotless" version "6.15.0"
    id "com.github.ben-manes.versions" version "0.45.0"
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://jitpack.io"
            content {
                includeModule("com.github.simonnorberg", "dmach-externals")
            }
        }
    }
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ["alpha", "beta", "dev", "cr", "m"].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject("Release candidate")
            }
        }
    }
}

subprojects {
    configurations.configureEach {
        resolutionStrategy {
            eachDependency { details ->
                def group = details.requested.group
                if (group.startsWith("androidx.lifecycle")) {
                    details.useVersion versions.lifecycle
                }
                if (group == "androidx.fragment") {
                    details.useVersion "1.5.5"
                }
            }
        }
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "11"
            allWarningsAsErrors = true
            freeCompilerArgs += "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-opt-in=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-opt-in=androidx.compose.foundation.ExperimentalFoundationApi"
            freeCompilerArgs += "-opt-in=androidx.compose.material3.ExperimentalMaterial3Api"
            freeCompilerArgs += "-opt-in=androidx.compose.ui.ExperimentalComposeUiApi"
        }
    }
    apply plugin: "com.diffplug.spotless"
    spotless {
        kotlin {
            target "**/*.kt"
            ktlint("0.48.2").editorConfigOverride([
                    ktlint_code_style: "android",
                    max_line_length  : 120
            ])
        }
    }
}
